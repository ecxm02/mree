services:
  # Main FastAPI application
  music-api:
    build: .
    ports:
      - "${PORT}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@music-db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://music-redis:6379/0
      - ELASTICSEARCH_URL=http://music-search:9200
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - HOST=${HOST}
      - PORT=${PORT}
      - MUSIC_STORAGE_PATH=/app/music
      - IMAGE_STORAGE_PATH=/app/images
      - MUSIC_DOWNLOAD_PATH=/app/downloads
      - POSTGRES_DATA_PATH=/app/postgres
      - ELASTICSEARCH_DATA_PATH=/app/elasticsearch  
      - BACKUP_PATH=/app/backups
      - BACKUP_ENABLED=${BACKUP_ENABLED}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS}
      - BACKUP_COMPRESS=${BACKUP_COMPRESS}
      - IMAGE_CLEANUP_ENABLED=${IMAGE_CLEANUP_ENABLED}
      - METRICS_ENABLED=${METRICS_ENABLED}
      - METRICS_UPDATE_INTERVAL=${METRICS_UPDATE_INTERVAL}
      - CELERY_WORKER_PREFETCH_MULTIPLIER=${CELERY_WORKER_PREFETCH_MULTIPLIER}
      - CELERY_BROKER_CONNECTION_RETRY=${CELERY_BROKER_CONNECTION_RETRY}
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=${CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP}
      - CELERY_BROKER_CONNECTION_MAX_RETRIES=${CELERY_BROKER_CONNECTION_MAX_RETRIES}
    volumes:
      - ${MUSIC_STORAGE_PATH}:/app/music
      - ${IMAGE_STORAGE_PATH}:/app/images
      - ${MUSIC_DOWNLOAD_PATH}:/app/downloads
      - ${BACKUP_PATH}:/app/backups
    depends_on:
      - music-db
      - music-redis
      - music-search
    restart: unless-stopped

  # PostgreSQL database
  music-db:
    image: postgres:15
    ports:
      - "5433:5432"  # External 5433 to avoid Immich conflict
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis cache and queue
  music-redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # External 6380 to avoid Immich conflict
    volumes:
      - ${REDIS_DATA_PATH}:/data
    restart: unless-stopped

  # Elasticsearch for search
  music-search:
    image: elasticsearch:8.11.1
    ports:
      - "9201:9200"  # External 9201 to avoid conflicts
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms${ELASTICSEARCH_MEMORY} -Xmx${ELASTICSEARCH_MEMORY}"
    volumes:
      - ${ELASTICSEARCH_DATA_PATH}:/usr/share/elasticsearch/data
    user: "${ELASTICSEARCH_USER_ID}:${ELASTICSEARCH_GROUP_ID}"  # Fix permissions issue
    restart: unless-stopped

  # Background worker for downloads
  music-worker:
    build: .
    command: celery -A app.worker.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@music-db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://music-redis:6379/0
      - ELASTICSEARCH_URL=http://music-search:9200
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SECRET_KEY=${SECRET_KEY}
      - MUSIC_STORAGE_PATH=/app/music
      - IMAGE_STORAGE_PATH=/app/images
      - MUSIC_DOWNLOAD_PATH=/app/downloads
      - BACKUP_PATH=/app/backups
      - BACKUP_ENABLED=${BACKUP_ENABLED}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS}
      - BACKUP_COMPRESS=${BACKUP_COMPRESS}
      - IMAGE_CLEANUP_ENABLED=${IMAGE_CLEANUP_ENABLED}
      - CELERY_WORKER_PREFETCH_MULTIPLIER=${CELERY_WORKER_PREFETCH_MULTIPLIER}
      - CELERY_BROKER_CONNECTION_RETRY=${CELERY_BROKER_CONNECTION_RETRY}
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=${CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP}
      - CELERY_BROKER_CONNECTION_MAX_RETRIES=${CELERY_BROKER_CONNECTION_MAX_RETRIES}
    volumes:
      - ${MUSIC_STORAGE_PATH}:/app/music
      - ${IMAGE_STORAGE_PATH}:/app/images
      - ${MUSIC_DOWNLOAD_PATH}:/app/downloads
      - ${BACKUP_PATH}:/app/backups
    depends_on:
      - music-db
      - music-redis
      - music-search
    restart: unless-stopped

  # Celery Beat for scheduled tasks (backups)
  music-scheduler:
    build: .
    command: celery -A app.worker.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@music-db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://music-redis:6379/0
      - ELASTICSEARCH_URL=http://music-search:9200
      - SECRET_KEY=${SECRET_KEY}
      - BACKUP_ENABLED=${BACKUP_ENABLED}
      - BACKUP_PATH=/app/backups
      - BACKUP_SCHEDULE_HOUR=${BACKUP_SCHEDULE_HOUR}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS}
      - BACKUP_COMPRESS=${BACKUP_COMPRESS}
      - IMAGE_CLEANUP_ENABLED=${IMAGE_CLEANUP_ENABLED}
      - IMAGE_STORAGE_PATH=/app/images
      - CELERY_WORKER_PREFETCH_MULTIPLIER=${CELERY_WORKER_PREFETCH_MULTIPLIER}
      - CELERY_BROKER_CONNECTION_RETRY=${CELERY_BROKER_CONNECTION_RETRY}
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=${CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP}
      - CELERY_BROKER_CONNECTION_MAX_RETRIES=${CELERY_BROKER_CONNECTION_MAX_RETRIES}
    volumes:
      - ${BACKUP_PATH}:/app/backups
      - ${IMAGE_STORAGE_PATH}:/app/images
    depends_on:
      - music-db
      - music-redis
      - music-search
    restart: unless-stopped
